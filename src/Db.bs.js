// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Json = require("@glennsl/bs-json/src/Json.bs.js");
var Block = require("bs-platform/lib/js/block.js");
var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Belt_MapInt = require("bs-platform/lib/js/belt_MapInt.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/src/Json_encode.bs.js");

function decode(str) {
  var json = Json.parseOrRaise(str);
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.$$int, json),
          /* name */Json_decode.field("name", Json_decode.string, json)
        ];
}

function encode(person) {
  return Json.stringify(Json_encode.object_(/* :: */[
                  /* tuple */[
                    "id",
                    person[/* id */0]
                  ],
                  /* :: */[
                    /* tuple */[
                      "name",
                      person[/* name */1]
                    ],
                    /* [] */0
                  ]
                ]));
}

var Person = /* module */[
  /* decode */decode,
  /* encode */encode
];

function colorToStr(color) {
  if (color) {
    return "white";
  } else {
    return "black";
  }
}

function strToColor(str) {
  switch (str) {
    case "black" : 
        return /* Black */0;
    case "white" : 
        return /* White */1;
    default:
      return Js_exn.raiseError("Unknown color");
  }
}

function decode$1(str) {
  var json = Json.parseOrRaise(str);
  return /* record */[
          /* id */Json_decode.field("id", Json_decode.$$int, json),
          /* name */Json_decode.map(strToColor, Json_decode.string, json)
        ];
}

function encode$1(color) {
  return Json.stringify(Json_encode.object_(/* :: */[
                  /* tuple */[
                    "id",
                    color[/* id */0]
                  ],
                  /* :: */[
                    /* tuple */[
                      "name",
                      color[/* name */1] ? "white" : "black"
                    ],
                    /* [] */0
                  ]
                ]));
}

var Color = /* module */[
  /* colorToStr */colorToStr,
  /* strToColor */strToColor,
  /* decode */decode$1,
  /* encode */encode$1
];

var personStore = /* record */[/* contents */Belt_MapInt.empty];

var colorStore = /* record */[/* contents */Belt_MapInt.empty];

function add(s) {
  if (s.tag) {
    var c = s[0];
    colorStore[0] = Belt_MapInt.set(colorStore[0], c[/* id */0], encode$1(c));
    return /* Ok */Block.__(0, [/* () */0]);
  } else {
    var p = s[0];
    personStore[0] = Belt_MapInt.set(personStore[0], p[/* id */0], encode(p));
    return /* Ok */Block.__(0, [/* () */0]);
  }
}

function getPerson(key) {
  return /* Person */Block.__(0, [decode(Belt_MapInt.getExn(personStore[0], key))]);
}

function getColor(key) {
  return /* Color */Block.__(1, [decode$1(Belt_MapInt.getExn(colorStore[0], key))]);
}

exports.Person = Person;
exports.Color = Color;
exports.personStore = personStore;
exports.colorStore = colorStore;
exports.add = add;
exports.getPerson = getPerson;
exports.getColor = getColor;
/* Json_encode Not a pure module */
